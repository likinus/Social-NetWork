{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Myposts/MyPosts.module.css","components/Profile/Myposts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Myposts/Post/Post.jsx","components/Profile/Myposts/MyPosts.jsx","components/Profile/Myposts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","alt","fullName","aboutMe","Preloader","Post","item","message","likesCount","maxLength30","maxLengthCreator","MyPosts","memo","postsElements","posts","map","post","id","key","likiesCount","console","log","postsBlock","PostReduxFrom","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","name","component","TextArea","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.b6a7c4dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"main_img\":\"ProfileInfo_main_img__7BfSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3_6PC\",\"posts\":\"MyPosts_posts__1hEKQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__LYZ_H\"};","import React from 'react';\n\nclass ProfileStatus extends React.Component {\n  state = {\n    editMode: false,\n    status: this.props.status,\n  };\n\n  activateEditMode = () => {\n    this.setState({\n      editMode: true,\n    });\n  };\n\n  deactivateEditMode = () => {\n    this.setState({\n      editMode: false,\n    });\n    this.props.updateStatus(this.state.status);\n  };\n\n  onStatusChange = (e) => {\n    this.setState({\n      status: e.target.value,\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.status !== this.props.status) {\n      this.setState({ status: this.props.status });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div>\n          {!this.state.editMode ? (\n            <div>\n              <span onDoubleClick={() => this.activateEditMode()}>\n                {this.props.status || 'Enter your status'}\n              </span>\n            </div>\n          ) : (\n            <div>\n              <input\n                onChange={this.onStatusChange}\n                autoFocus={true}\n                onBlur={() => this.deactivateEditMode()}\n                value={this.state.status}\n              />\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ProfileStatus;\n","import React, { useState, useEffect } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <>\n      <div>\n        {!editMode ? (\n          <div>\n            <span onDoubleClick={activateEditMode}>{props.status || 'Enter your status'}</span>\n          </div>\n        ) : (\n          <div>\n            <input\n              onChange={onStatusChange}\n              value={status}\n              autoFocus={true}\n              onBlur={deactivateEditMode}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React from 'react';\nimport Preloader from '../../common/Preloader/Preloader';\nimport s from './ProfileInfo.module.css';\nimport ProfileStatus from './ProfileStatus';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\nfunction ProfileInfo(props) {\n  if (!props.profile) {\n    return <Preloader />;\n  }\n\n  return (\n    <div>\n      {/* <div>\n        <img\n          className={s.main_img}\n          src=\"https://klike.net/uploads/posts/2019-06/1560664221_1.jpg\"\n          alt=\"some img\"></img>\n      </div> */}\n      <div className={s.descriptionBlock}>\n        <img src={props.profile.photos.large} alt=\"some img\" />\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\n        <h2>{props.profile.fullName}</h2>\n        <p>{props.profile.aboutMe}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileInfo;\n","import React from 'react';\nimport s from './Post.module.css';\n\nfunction Post(props) {\n  return (\n    <div className={s.item}>\n      <img\n        src=\"https://vignette.wikia.nocookie.net/avatar/images/f/f4/3х21_Аанг.jpg/revision/latest?cb=20110327121409&path-prefix=ru\"\n        alt=\"some img\"></img>\n      {props.message}\n      <div>\n        <span>like {props.likesCount}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n","import React, { Component } from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\nimport { TextArea } from '../../common/Preloader/FormsControls/FormsControls';\n\nconst maxLength30 = maxLengthCreator(30);\n\nconst MyPosts = React.memo((props) => {\n  let postsElements = props.posts.map((post) => (\n    <Post id={post.id} message={post.message} key={post.id} likesCount={post.likiesCount} />\n  ));\n\n  let addNewPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n\n  console.log('render');\n  console.log(props);\n\n  return (\n    <div className={s.postsBlock}>\n      <h3>My Posts</h3>\n      <PostReduxFrom onSubmit={addNewPost} />\n      <div className={s.posts}>{postsElements}</div>\n    </div>\n  );\n});\n\nconst PostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field name=\"newPostText\" component={TextArea} validate={[required, maxLength30]}></Field>\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  );\n};\n\nconst PostReduxFrom = reduxForm({\n  form: 'profileAddPostForm',\n})(PostForm);\n\nexport default MyPosts;\n","import { connect } from 'react-redux';\nimport { addPostActionCreator } from '../../../Redux/profileReducer';\nimport MyPosts from './MyPosts';\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    },\n  };\n};\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './Myposts/MyPostsContainer';\n\nfunction Profile(props) {\n  return (\n    <div>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n}\n\nexport default Profile;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { getUserProfile, getStatus, updateStatus } from '../../Redux/profileReducer';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push('/login');\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n      />\n    );\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n  withRouter,\n  // withAuthRedirect,\n)(ProfileContainer);\n"],"sourceRoot":""}