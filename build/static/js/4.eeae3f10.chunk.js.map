{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","text","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","validate","required","placeholder","Dialogs","state","messagesPage","dialogsElements","dialogs","map","key","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,sFCYrMC,EATI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,yBAAKC,UAAS,UAAKC,IAAEC,OAAP,YAAiBD,IAAEE,SAC/B,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCGjBC,EARC,SAACT,GACf,OACE,oCACE,yBAAKG,UAAWC,IAAEM,SAAUV,EAAMW,Q,0CCGlCC,EAAeC,YAAiB,KA6ChCC,EAAsBC,YAAU,CACpCC,KAAM,wBADoBD,EAjBL,SAACf,GACtB,OACE,0BAAMiB,SAAUjB,EAAMkB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBJ,KAAK,iBACLgB,YAAY,wBAEhB,6BACE,4CAUOC,EA/CC,SAACzB,GACf,IAAI0B,EAAQ1B,EAAM2B,aACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACzB,GAAD,OACtC,kBAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMuB,IAAK1B,EAAOH,GAAIA,GAAIG,EAAOH,QAExD8B,EAAmBN,EAAMO,SAASH,KAAI,SAACI,GAAD,OACxC,kBAAC,EAAD,CAASvB,KAAMuB,EAAExB,QAASqB,IAAKG,EAAEhC,GAAIA,GAAIgC,EAAEhC,QAO7C,OAAKF,EAAMmC,OAGT,yBAAKhC,UAAWC,IAAEyB,SAChB,yBAAK1B,UAAWC,IAAEgC,cAAeR,GACjC,yBAAKzB,UAAWC,IAAE6B,UAChB,6BAAMD,GACN,kBAAClB,EAAD,CAAqBG,SAXP,SAACoB,GACnBrC,EAAMsC,YAAYD,EAAOE,qBAGD,kBAAC,IAAD,CAAUhC,GAAG,Y,iCCJ1BiC,sBAAQC,aAdD,SAACf,GACrB,MAAO,CACLC,aAAcD,EAAMC,iBAIC,SAACe,GACxB,MAAO,CACLJ,YAAa,SAACC,GACZG,EAASC,YAAmBJ,SAKmCK,IAAtDJ,CAAwEf","file":"static/js/4.eeae3f10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\",\"active\":\"Dialogs_active__2sQhs\"};","import React from 'react';\nimport s from '../Dialogs.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n  let path = '/dialogs/' + props.id;\n  return (\n    <div className={`${s.dialog} ${s.active}`}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","import React from 'react';\nimport s from '../Dialogs.module.css';\n\nconst Message = (props) => {\n  return (\n    <>\n      <div className={s.message}>{props.text}</div>\n    </>\n  );\n};\n\nexport default Message;\n","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Redirect } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { TextArea } from '../common/Preloader/FormsControls/FormsControls';\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\n\nconst maxLength100 = maxLengthCreator(100);\n\nconst Dialogs = (props) => {\n  let state = props.messagesPage;\n  let dialogsElements = state.dialogs.map((dialog) => (\n    <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />\n  ));\n  let messagesElements = state.messages.map((m) => (\n    <Message text={m.message} key={m.id} id={m.id} />\n  ));\n\n  let addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody);\n  };\n\n  if (!props.isAuth) return <Redirect to=\"/login\" />;\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>{dialogsElements}</div>\n      <div className={s.messages}>\n        <div>{messagesElements}</div>\n        <AddMessageFormRedux onSubmit={addNewMessage} />\n      </div>\n    </div>\n  );\n};\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={TextArea}\n          validate={[required, maxLength100]}\n          name=\"newMessageBody\"\n          placeholder=\"Enter your message\"></Field>\n      </div>\n      <div>\n        <button>Add</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddMessageFormRedux = reduxForm({\n  form: 'dialogAddmessageForm',\n})(AddMessageForm);\n\nexport default Dialogs;\n","import Dialogs from './Dialogs';\nimport { sendMessageCreator } from '../../Redux/messageReducer';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../HOC/WithAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    messagesPage: state.messagesPage,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageCreator(newMessageBody));\n    },\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);\n"],"sourceRoot":""}